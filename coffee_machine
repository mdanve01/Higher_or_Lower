from data import MENU
from data import resources

# set switch to on
switch = "on"

# set money so far
money = 0.00


# function to check for sufficient funds
def funds(value, paid):
    if paid > MENU[value]["cost"]:
        change = float(paid - MENU[value]["cost"])
        print(f"Thank you, here is your {value} and your ${change} in change. Enjoy!")
        money += MENU[value]["cost"]
    elif paid == MENU[value]["cost"]:
        print(f"Thank you, here is your {value}. Enjoy!")
        money += MENU[value]["cost"]
    else:
        print("Sorry, that is not enough money. Money refunded")
        # as refunded now add the resources back on as not purchased
        resources["water"] += MENU[value]["ingredients"]["water"]
        resources["coffee"] += MENU[value]["ingredients"]["coffee"]
        if value != "espresso":
            resources["milk"] += MENU[value]["ingredients"]["coffee"]


while switch != "off":
    # set a proceed value
    proceed = "go"

    # take the customer order
    order = input("What would you like? (espresso/latte/cappuccino): ").lower()

    # if an engineer wants a report of stock
    if order == "report":
        reswat = resources["water"]
        resmil = resources["milk"]
        rescof = resources["coffee"]
        print(f"Water: {reswat}")
        print(f"Milk: {resmil}")
        print(f"Coffee: {rescof}")
        print(f"Money: ${money}")

    # if a customer orders one of the available drinks
    elif order == "espresso" or order == "latte" or order == "cappuccino":
        
        # update the amounts of each resource, but also report if any are insufficient
        resources["water"] -= MENU[order]["ingredients"]["water"]
        if resources["water"] < 0:
            print("Sorry there is not enough water.")
            proceed = "stop"
        resources["coffee"] -= MENU[order]["ingredients"]["coffee"]
        if resources["coffee"] < 0:
            print("Sorry there is not enough coffee.")
            proceed = "stop"
            
        # look at milk only if NOT espresso
        if order != "espresso":
            resources["milk"] -= MENU[order]["ingredients"]["milk"]
            if resources["milk"] < 0:
                print("Sorry there is not enough milk.")
                proceed = "stop"
                
            # as we could not proceed with the order, then need to reset all resources to pre-order values
            if resources["water"] < 0 or resources["coffee"] < 0 or resources["milk"] < 0:
                resources["water"] += MENU[order]["ingredients"]["water"]
                resources["coffee"] += MENU[order]["ingredients"]["coffee"]
                resources["milk"] += MENU[order]["ingredients"]["milk"]
                
        # for espresso orders only
        elif order == "espresso":
            # if cannot proceed with the order then reset all resources to pre-order values
            if resources["water"] < 0 or resources["coffee"] < 0:
                resources["water"] += MENU[order]["ingredients"]["water"]
                resources["coffee"] += MENU[order]["ingredients"]["coffee"]
                
        # now prompt to insert coins but only ig we are proceeding with the order
        if proceed == "go":
            quarter = input("How many quarters? ")
            dime = input("How many dimes? ")
            nickle = input("How many nickles? ")
            penny = input("How many pennies? ")

            # sum these based on their monetary value
            total = round((float(quarter) * 0.25) + (float(dime) * 0.1) + (float(nickle) * 0.05) + (float(penny) * 0.01), 2)

            # sort out the funding and give change/reimburse if not enough
            if total > MENU[order]["cost"]:
                # calculate change and report to customer
                change = round((total - MENU[order]["cost"]), 2)
                print(f"Thank you, here is your {order} and your ${change} in change. Enjoy!")
                # add to the money box
                money += MENU[order]["cost"]
            elif total == MENU[order]["cost"]:
                # give customer drink
                print(f"Thank you, here is your {order}. Enjoy!")
                # add to the money box
                money += MENU[order]["cost"]
            else:
                # report that money is insufficient
                print("Sorry, that is not enough money. Money refunded")
                # as refunded now add the resources back on as not purchased
                resources["water"] += MENU[order]["ingredients"]["water"]
                resources["coffee"] += MENU[order]["ingredients"]["coffee"]
                if order != "espresso":
                    resources["milk"] += MENU[order]["ingredients"]["milk"]
                    
                    
    # engineer switch to trun off the machine
    elif order == "off":
        switch = "off"
